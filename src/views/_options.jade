//- elements
.option
  .name $preview
  .type jQuery element
  .description
    :markdown
      The HTML element that displays image preview.
  .default: code '$imageCropper.find('.cropit-image-preview')'
.option
  .name $fileInput
  .type jQuery element
  .description
    :markdown
      File input element.
  .default: code '$imageCropper.find('input.cropit-image-input')'
.option
  .name $zoomSlider
  .type jQuery element
  .description
    :markdown
      Range input element that controls image zoom.
  .default: code '$imageCropper.find('input.cropit-image-zoom-input')'
.option
  .name $previewContainer
  .type jQuery element
  .description
    :markdown
      Preview container. Only needed when `imageBackground` is true.
  .default: code '$imageCropper.find('.cropit-image-preview-container')'

//- values
.option
  .name width
  .type number
  .description
    :markdown
      Width of image preview in pixels. If set, it will override the CSS property.
  .default: code null
.option
  .name height
  .type number
  .description
    :markdown
      Height of image preview in pixels. If set, it will override the CSS property.
  .default: code null
.option
  .name imageBackground
  .type boolean
  .description
    :markdown
      Whether or not to display the background image beyond the preview area.
  .default: code false
.option
  .name imageBackgroundBorderWidth
  .type array or number
  .description
    :markdown
      Width of background image border in pixels.
        The four array elements specify the width of background image width on the top, right, bottom, left side respectively.
        The background image beyond the width will be hidden.
        If specified as a number, border with uniform width on all sides will be applied.
  .default: code [0,0,0,0]
.option
  .name exportZoom
  .type number
  .description
    :markdown
      The ratio between the desired image size to export and the preview size.
        For example, if the preview size is `300px * 200px`, and `exportZoom = 2`, then
        the exported image size will be `600px * 400px`.
        This also affects the maximum zoom level, since the exported image cannot be zoomed to larger than its original size.
  .default: code 1
.option
  .name allowDragNDrop
  .type boolean
  .description
    :markdown
      When set to true, you can load an image by dragging it from local file browser onto the preview area.
  .default: code true
.option
  .name minZoom
  .type string
  .description
    :markdown
      This options decides the minimal zoom level of the image.
        If set to `'fill'`, the image has to fill the preview area, i.e. both width and height must not go smaller than the preview area.
        If set to `'fit'`, the image can shrink further to fit the preview area, i.e. at least one of its edges must not go smaller than the preview area.
  .default: code 'fill'
.option
  .name maxZoom
  .type string
  .description
    :markdown
      Determines how big the image can be zoomed. E.g. if set to 1.5, the image can be zoomed to 150% of its original size.
  .default: code 1
.option
  .name initialZoom
  .type string
  .description
    :markdown
      Determines the zoom when an image is loaded.
        When set to `'min'`, image is zoomed to the smallest when loaded.
        When set to `'image'`, image is zoomed to 100% when loaded.
  .default: code 'min'
.option
  .name freeMove
  .type boolean
  .description
    :markdown
      When set to true, you can freely move the image instead of being bound to the container borders
  .default: code false
.option
  .name smallImage
  .type string
  .description
    :markdown
      When set to `'reject'`, `onImageError` would be called when cropit loads an image that is smaller than the container.
        When set to `'allow'`, images smaller than the container can be zoomed down to its original size, overiding `minZoom` option.
        When set to `'stretch'`, the minimum zoom of small images would follow `minZoom` option.
  .default: code 'reject'
.option
  .name allowCrossOrigin
  .type boolean
  .description
    :markdown
      Set to true if you need to crop image served from other domains.
  .default: code false

//- callbacks
.option
  .name onFileChange
  .type function
  .description
    :markdown
      Called when user selects a file in the select file input.
.option
  .name onFileReaderError
  .type function
  .description
    :markdown
      Called when `FileReader` encounters an error while loading the image file.
.option
  .name onImageLoading
  .type function
  .description
    :markdown
      Called when image starts to be loaded.
.option
  .name onImageLoaded
  .type function
  .description
    :markdown
      Called when image is loaded.
.option
  .name onImageError
  .type function
  .description
    :markdown
      Called when image cannot be loaded.
.option
  .name onZoomEnabled
  .type function
  .description
    :markdown
      Called when image the zoom slider is enabled.
.option
  .name onZoomDisabled
  .type function
  .description
    :markdown
      Called when image the zoom slider is disabled.

